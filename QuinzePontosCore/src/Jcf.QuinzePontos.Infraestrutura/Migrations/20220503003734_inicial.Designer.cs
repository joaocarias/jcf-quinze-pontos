// <auto-generated />
using System;
using Jcf.QuinzePontos.Infraestrutura.Contextos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jcf.QuinzePontos.Infraestrutura.Migrations
{
    [DbContext(typeof(AppDbContexto))]
    [Migration("20220503003734_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Jcf.QuinzePontos.Dominio.Entidades.CidadePremiada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("EstadoPremiadoId")
                        .HasColumnType("char(36)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Vencedores")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EstadoPremiadoId");

                    b.ToTable("CidadesPremiadas");
                });

            modelBuilder.Entity("Jcf.QuinzePontos.Dominio.Entidades.Concurso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataRealizacao")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Dezena1")
                        .HasColumnType("int");

                    b.Property<int>("Dezena10")
                        .HasColumnType("int");

                    b.Property<int>("Dezena11")
                        .HasColumnType("int");

                    b.Property<int>("Dezena12")
                        .HasColumnType("int");

                    b.Property<int>("Dezena13")
                        .HasColumnType("int");

                    b.Property<int>("Dezena14")
                        .HasColumnType("int");

                    b.Property<int>("Dezena15")
                        .HasColumnType("int");

                    b.Property<int>("Dezena2")
                        .HasColumnType("int");

                    b.Property<int>("Dezena3")
                        .HasColumnType("int");

                    b.Property<int>("Dezena4")
                        .HasColumnType("int");

                    b.Property<int>("Dezena5")
                        .HasColumnType("int");

                    b.Property<int>("Dezena6")
                        .HasColumnType("int");

                    b.Property<int>("Dezena7")
                        .HasColumnType("int");

                    b.Property<int>("Dezena8")
                        .HasColumnType("int");

                    b.Property<int>("Dezena9")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorAposta")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Concursos");
                });

            modelBuilder.Entity("Jcf.QuinzePontos.Dominio.Entidades.EstadoPremiado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<double?>("Latitude")
                        .HasColumnType("double");

                    b.Property<double?>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("ResultadoLotofacilId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("Vencedores")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResultadoLotofacilId");

                    b.ToTable("EstadosPremiados");
                });

            modelBuilder.Entity("Jcf.QuinzePontos.Dominio.Entidades.Premiacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PremiacaoAcerto")
                        .HasColumnType("int");

                    b.Property<decimal>("Premio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<Guid>("ResultadoLotofacilId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Vencedores")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResultadoLotofacilId");

                    b.ToTable("Premiacoes");
                });

            modelBuilder.Entity("Jcf.QuinzePontos.Dominio.Entidades.ResultadoLotofacil", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AcumuladaProxConcurso")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("Acumulou")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ConcursoId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataProxConcurso")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("ProxConcurso")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConcursoId");

                    b.ToTable("ResultadosLotofacils");
                });

            modelBuilder.Entity("Jcf.QuinzePontos.Dominio.Entidades.CidadePremiada", b =>
                {
                    b.HasOne("Jcf.QuinzePontos.Dominio.Entidades.EstadoPremiado", "EstadoPremiado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoPremiadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoPremiado");
                });

            modelBuilder.Entity("Jcf.QuinzePontos.Dominio.Entidades.EstadoPremiado", b =>
                {
                    b.HasOne("Jcf.QuinzePontos.Dominio.Entidades.ResultadoLotofacil", "ResultadoLotofacil")
                        .WithMany("EstadosPremiados")
                        .HasForeignKey("ResultadoLotofacilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResultadoLotofacil");
                });

            modelBuilder.Entity("Jcf.QuinzePontos.Dominio.Entidades.Premiacao", b =>
                {
                    b.HasOne("Jcf.QuinzePontos.Dominio.Entidades.ResultadoLotofacil", "ResultadoLotofacil")
                        .WithMany("Premiacoes")
                        .HasForeignKey("ResultadoLotofacilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResultadoLotofacil");
                });

            modelBuilder.Entity("Jcf.QuinzePontos.Dominio.Entidades.ResultadoLotofacil", b =>
                {
                    b.HasOne("Jcf.QuinzePontos.Dominio.Entidades.Concurso", "Concurso")
                        .WithMany()
                        .HasForeignKey("ConcursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Concurso");
                });

            modelBuilder.Entity("Jcf.QuinzePontos.Dominio.Entidades.EstadoPremiado", b =>
                {
                    b.Navigation("Cidades");
                });

            modelBuilder.Entity("Jcf.QuinzePontos.Dominio.Entidades.ResultadoLotofacil", b =>
                {
                    b.Navigation("EstadosPremiados");

                    b.Navigation("Premiacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
